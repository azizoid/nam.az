name: Build and Deploy

on:
  push:
    branches:
      - main

env:
  SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
  HOST: ${{ secrets.HOST }}
  USERNAME: ${{ secrets.USERNAME }}
  TARGET_DIRECTORY: ${{ secrets.TARGET_DIRECTORY }}

  NEXT_PUBLIC_GOOGLE_MAPS_API_KEY: ${{ vars.NEXT_PUBLIC_GOOGLE_MAPS_API_KEY }}
  NEXT_PUBLIC_GTM_ID: ${{ vars.NEXT_PUBLIC_GTM_ID }}
  NEXT_PUBLIC_GA4_ID: ${{ vars.NEXT_PUBLIC_GA4_ID }}
  NEXT_PUBLIC_HIJRI_OFFSET: ${{ vars.NEXT_PUBLIC_HIJRI_OFFSET }}

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [20]

    steps:
      - uses: actions/checkout@v4
      - uses: pnpm/action-setup@v4
        with:
          version: 9.1.2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: "pnpm"
      - name: Install dependencies 
        run: pnpm run ci

      - name: Build with Next.js
        run: pnpm next build

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: next-build
          path: ./.next
          overwrite: true
          include-hidden-files: true
      
  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Setup SSH
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ env.SSH_PRIVATE_KEY }}

      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: next-build
          path: ./.next

      - name: Upload to Ubuntu server
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ env.HOST }}
          username: ${{ env.USERNAME }}
          key: ${{ env.SSH_PRIVATE_KEY }}
          source: ./*
          target: ${{ env.TARGET_DIRECTORY }}

      - name: Execute deployment commands on the server
        uses: appleboy/ssh-action@v1.1.0
        with:
          host: ${{ env.HOST }}
          username: ${{ env.USERNAME }}
          key: ${{ env.SSH_PRIVATE_KEY }}
          script: |
            cd ${{ env.TARGET_DIRECTORY }}
            git fetch
            git checkout main
            git pull
            pnpm run ci
            pm2 restart nam.az
            echo "Files uploaded successfully!"
